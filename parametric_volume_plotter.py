# -*- coding: utf-8 -*-
"""Parametric-Volume-Plotter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UYTTyCh7E8SF7EJ28lFCadzGz7xDDCtf
"""

# Commented out IPython magic to ensure Python compatibility.
# ##### Install of DTU-mathtools
# %%capture
# !pip install dtumathtools

##### Imports
from sympy import *
from dtumathtools import * 
init_printing()

# Plotting Parameters
u,v,w = symbols("u v w",real=True)

uin = [0,1]
vin = [0,1]
win = [0,pi/2]

# Making the Parametrization of the Surface
x = v*u**2*cos(w)
y = v*u**2*sin(w)
z = u

r = Matrix([x,y,z])
r

# Defining all Surfaces to form Volume
wmin = dtuplot.plot3d_parametric_surface(*r.subs(w,win[0]),(u,uin[0],uin[1]),(v,vin[0],vin[1]),use_cm=False,camera={"elev":30,"azim":130},show=False)
wmax = dtuplot.plot3d_parametric_surface(*r.subs(w,win[1]),(u,uin[0],uin[1]),(v,vin[0],vin[1]),use_cm=False,camera={"elev":30,"azim":130},show=False)
vmin = dtuplot.plot3d_parametric_surface(*r.subs(v,vin[0]),(u,uin[0],uin[1]),(w,win[0],win[1]),use_cm=False,camera={"elev":30,"azim":130},show=False)
vmax = dtuplot.plot3d_parametric_surface(*r.subs(v,vin[1]),(u,uin[0],uin[1]),(w,win[0],win[1]),use_cm=False,camera={"elev":30,"azim":130},show=False)
umin = dtuplot.plot3d_parametric_surface(*r.subs(u,uin[0]),(w,win[0],win[1]),(v,vin[0],vin[1]),use_cm=False,camera={"elev":30,"azim":130},show=False)
umax = dtuplot.plot3d_parametric_surface(*r.subs(u,uin[1]),(w,win[0],win[1]),(v,vin[0],vin[1]),use_cm=False,camera={"elev":30,"azim":130},show=False)

# Plotting all Surfaces, generating the Volume
(wmin + wmax + vmin + vmax + umin + umax).show()